{"ast":null,"code":"var _jsxFileName = \"/Users/iLuna/Desktop/CS6301/6301Fall21PTTPrj2/PTTWeb2/pttweb2/src/routes/Admin.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Button, TextField, Grid } from \"@material-ui/core\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport { apiUrl } from \"../config.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Admin() {\n  _s();\n\n  const [users, setUsers] = useState([{\n    id: 0\n  }]);\n  const [inputFnameNew, setInputFnameNew] = useState(\"\");\n  const [inputLnameNew, setInputLnameNew] = useState(\"\");\n  const [inputEmailNew, setInputEmailNew] = useState(\"\");\n  const [inputFnameEdit, setInputFnameEdit] = useState(\"\");\n  const [inputLnameEdit, setInputLnameEdit] = useState(\"\");\n  const [selectedEditUser, setSelectedEditUser] = useState({});\n  const [selectedDelUser, setSelectedDelUser] = useState({});\n  const [update, setUpdate] = useState(false);\n  useEffect(() => {\n    const getAllUsers = async () => {\n      const {\n        data\n      } = await axios.get(`${apiUrl}/users`);\n      setUsers(data);\n      setUpdate(false);\n    };\n\n    getAllUsers();\n  }, [update]);\n\n  const handleInputFnameNew = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setInputFnameNew(value);\n  };\n\n  const handleInputLnameNew = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setInputLnameNew(value);\n  };\n\n  const handleInputEmailNew = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setInputEmailNew(value);\n  };\n\n  const handleCreate = async () => {\n    await axios.post(`${apiUrl}/users`, {\n      firstName: inputFnameNew,\n      lastName: inputLnameNew,\n      email: inputEmailNew\n    });\n    setInputFnameNew(\"\");\n    setInputLnameNew(\"\");\n    setInputEmailNew(\"\");\n    setUpdate(true);\n  };\n\n  const handleEditSelect = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setSelectedEditUser(value);\n    setInputFnameEdit(value.firstName);\n    setInputLnameEdit(value.lastName);\n  };\n\n  const handleInputFnameEdit = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setInputFnameEdit(value);\n  };\n\n  const handleInputLnameEdit = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setInputLnameEdit(value);\n  };\n\n  const handleUpdate = async () => {\n    await axios.put(`${apiUrl}/users/${selectedEditUser.id}`, {\n      firstName: inputFnameEdit,\n      lastName: inputLnameEdit,\n      email: selectedEditUser.email\n    });\n    setInputFnameEdit(\"\");\n    setInputLnameEdit(\"\");\n    setUpdate(true);\n  };\n\n  const handleDelSelect = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setSelectedDelUser(value);\n  };\n\n  const handleDelete = async () => {\n    //check if the selected user has project or not\n    const projects = await axios.get(`${apiUrl}/users/${selectedDelUser.id}/projects`);\n    let deleteSign = true;\n\n    if (projects.data.length > 0) {\n      if (!window.confirm(\"Are you sure? The user has project(s)!\")) {\n        deleteSign = false;\n      }\n    }\n\n    if (deleteSign) {\n      await axios.delete(`${apiUrl}/users/${selectedDelUser.id}`);\n      setSelectedDelUser({});\n      setUpdate(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin - Manage Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      justifyContent: \"space-around\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          sx: {\n            width: 200\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            id: \"outlined-basic\",\n            label: \"First Name\",\n            variant: \"outlined\",\n            onChange: handleInputFnameNew,\n            value: inputFnameNew,\n            margin: \"dense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            id: \"outlined-basic\",\n            label: \"Last Name\",\n            variant: \"outlined\",\n            onChange: handleInputLnameNew,\n            value: inputLnameNew,\n            margin: \"dense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            id: \"outlined-basic\",\n            label: \"Email\",\n            variant: \"outlined\",\n            onChange: handleInputEmailNew,\n            value: inputEmailNew,\n            margin: \"dense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleCreate,\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Edit User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          sx: {\n            m: 1,\n            width: 200\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: selectedEditUser,\n            onChange: handleEditSelect,\n            input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n              label: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 22\n            }, this),\n            margin: \"dense\",\n            children: users.map(user => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: user,\n              children: user.email\n            }, user.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-basic\",\n            label: \"First Name\",\n            variant: \"outlined\",\n            onChange: handleInputFnameEdit,\n            value: inputFnameEdit,\n            margin: \"dense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-basic\",\n            label: \"Last Name\",\n            variant: \"outlined\",\n            onChange: handleInputLnameEdit,\n            value: inputLnameEdit,\n            margin: \"dense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleUpdate,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Delete User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          sx: {\n            width: 200\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: selectedDelUser,\n            onChange: handleDelSelect,\n            input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n              label: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 22\n            }, this),\n            children: users.map(user => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: user,\n              children: user.email\n            }, user.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleDelete,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Admin, \"HRXk3QD33DVlHcI32ke9AfIQVsE=\");\n\n_c = Admin;\nexport default Admin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"sources":["/Users/iLuna/Desktop/CS6301/6301Fall21PTTPrj2/PTTWeb2/pttweb2/src/routes/Admin.js"],"names":["useEffect","useState","axios","Button","TextField","Grid","OutlinedInput","InputLabel","MenuItem","FormControl","Select","apiUrl","Admin","users","setUsers","id","inputFnameNew","setInputFnameNew","inputLnameNew","setInputLnameNew","inputEmailNew","setInputEmailNew","inputFnameEdit","setInputFnameEdit","inputLnameEdit","setInputLnameEdit","selectedEditUser","setSelectedEditUser","selectedDelUser","setSelectedDelUser","update","setUpdate","getAllUsers","data","get","handleInputFnameNew","event","target","value","handleInputLnameNew","handleInputEmailNew","handleCreate","post","firstName","lastName","email","handleEditSelect","handleInputFnameEdit","handleInputLnameEdit","handleUpdate","put","handleDelSelect","handleDelete","projects","deleteSign","length","window","confirm","delete","margin","width","m","map","user"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Button, TextField, Grid } from \"@material-ui/core\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport { apiUrl } from \"../config.json\";\n\nfunction Admin() {\n  const [users, setUsers] = useState([{ id: 0 }]);\n  const [inputFnameNew, setInputFnameNew] = useState(\"\");\n  const [inputLnameNew, setInputLnameNew] = useState(\"\");\n  const [inputEmailNew, setInputEmailNew] = useState(\"\");\n\n  const [inputFnameEdit, setInputFnameEdit] = useState(\"\");\n  const [inputLnameEdit, setInputLnameEdit] = useState(\"\");\n  const [selectedEditUser, setSelectedEditUser] = useState({});\n\n  const [selectedDelUser, setSelectedDelUser] = useState({});\n  const [update, setUpdate] = useState(false);\n\n  useEffect(() => {\n    const getAllUsers = async () => {\n      const { data } = await axios.get(`${apiUrl}/users`);\n      setUsers(data);\n      setUpdate(false);\n    };\n    getAllUsers();\n  }, [update]);\n\n  const handleInputFnameNew = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setInputFnameNew(value);\n  };\n\n  const handleInputLnameNew = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setInputLnameNew(value);\n  };\n\n  const handleInputEmailNew = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setInputEmailNew(value);\n  };\n\n  const handleCreate = async () => {\n    await axios.post(`${apiUrl}/users`, {\n      firstName: inputFnameNew,\n      lastName: inputLnameNew,\n      email: inputEmailNew,\n    });\n    setInputFnameNew(\"\");\n    setInputLnameNew(\"\");\n    setInputEmailNew(\"\");\n    setUpdate(true);\n  };\n\n  const handleEditSelect = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setSelectedEditUser(value);\n    setInputFnameEdit(value.firstName);\n    setInputLnameEdit(value.lastName);\n  };\n\n  const handleInputFnameEdit = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setInputFnameEdit(value);\n  };\n\n  const handleInputLnameEdit = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setInputLnameEdit(value);\n  };\n\n  const handleUpdate = async () => {\n    await axios.put(`${apiUrl}/users/${selectedEditUser.id}`, {\n      firstName: inputFnameEdit,\n      lastName: inputLnameEdit,\n      email: selectedEditUser.email,\n    });\n    setInputFnameEdit(\"\");\n    setInputLnameEdit(\"\");\n    setUpdate(true);\n  };\n\n  const handleDelSelect = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setSelectedDelUser(value);\n  };\n\n  const handleDelete = async () => {\n    //check if the selected user has project or not\n    const projects = await axios.get(\n      `${apiUrl}/users/${selectedDelUser.id}/projects`\n    );\n    let deleteSign = true;\n    if (projects.data.length > 0) {\n      if (!window.confirm(\"Are you sure? The user has project(s)!\")) {\n        deleteSign = false;\n      }\n    }\n    if (deleteSign) {\n      await axios.delete(`${apiUrl}/users/${selectedDelUser.id}`);\n      setSelectedDelUser({});\n      setUpdate(true);\n    }\n  };\n  return (\n    <div style={{ margin: 20 }}>\n      <h1>Admin - Manage Users</h1>\n      <Grid container direction=\"row\" justifyContent=\"space-around\">\n        <Grid item>\n          <h2>Add User</h2>\n          <FormControl sx={{ width: 200 }}>\n            <TextField\n              required\n              id=\"outlined-basic\"\n              label=\"First Name\"\n              variant=\"outlined\"\n              onChange={handleInputFnameNew}\n              value={inputFnameNew}\n              margin=\"dense\"\n            />\n            <TextField\n              required\n              id=\"outlined-basic\"\n              label=\"Last Name\"\n              variant=\"outlined\"\n              onChange={handleInputLnameNew}\n              value={inputLnameNew}\n              margin=\"dense\"\n            />\n            <TextField\n              required\n              id=\"outlined-basic\"\n              label=\"Email\"\n              variant=\"outlined\"\n              onChange={handleInputEmailNew}\n              value={inputEmailNew}\n              margin=\"dense\"\n            />\n            <Button variant=\"contained\" onClick={handleCreate}>\n              Create\n            </Button>\n          </FormControl>\n        </Grid>\n\n        <Grid item>\n          <h2>Edit User</h2>\n          <FormControl sx={{ m: 1, width: 200 }}>\n            <InputLabel>User</InputLabel>\n            <Select\n              value={selectedEditUser}\n              onChange={handleEditSelect}\n              input={<OutlinedInput label=\"Name\" />}\n              margin=\"dense\"\n            >\n              {users.map((user) => (\n                <MenuItem key={user.id} value={user}>\n                  {user.email}\n                </MenuItem>\n              ))}\n            </Select>\n            <TextField\n              id=\"outlined-basic\"\n              label=\"First Name\"\n              variant=\"outlined\"\n              onChange={handleInputFnameEdit}\n              value={inputFnameEdit}\n              margin=\"dense\"\n            />\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Last Name\"\n              variant=\"outlined\"\n              onChange={handleInputLnameEdit}\n              value={inputLnameEdit}\n              margin=\"dense\"\n            />\n            <Button variant=\"contained\" onClick={handleUpdate}>\n              Update\n            </Button>\n          </FormControl>\n        </Grid>\n\n        <Grid item>\n          <h2>Delete User</h2>\n          <FormControl sx={{ width: 200 }}>\n            <InputLabel>User</InputLabel>\n            <Select\n              value={selectedDelUser}\n              onChange={handleDelSelect}\n              input={<OutlinedInput label=\"Name\" />}\n            >\n              {users.map((user) => (\n                <MenuItem key={user.id} value={user}>\n                  {user.email}\n                </MenuItem>\n              ))}\n            </Select>\n            <Button variant=\"contained\" onClick={handleDelete}>\n              Delete\n            </Button>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Admin;\n"]},"metadata":{},"sourceType":"module"}