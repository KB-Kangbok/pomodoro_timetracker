{"ast":null,"code":"var _jsxFileName = \"/Users/iLuna/Desktop/CS6301/6301Fall21PTTPrj2/PTTWeb2/pttweb2/src/routes/User.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { Button, TextField, Grid } from '@material-ui/core';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst names = ['Oliver Hansen', 'Van Henry', 'April Tucker', 'Ralph Hubbard', 'Omar Alexander', 'Carlos Abbott', 'Miriam Wagner', 'Bradley Wilkerson', 'Virginia Andrews', 'Kelly Snyder'];\nexport default function User() {\n  _s();\n\n  const [personName, setPersonName] = React.useState([]);\n\n  const handleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setPersonName( // On autofill we get a the stringified value.\n    typeof value === 'string' ? value.split(',') : value);\n  };\n\n  const paperStyle = {\n    padding: 20,\n    height: \"60vh\",\n    width: 350,\n    margin: \"20px auto\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      elevation: 10,\n      style: paperStyle,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          m: 1,\n          width: 200\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: personName,\n          onChange: handleChange,\n          input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n            label: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 18\n          }, this),\n          children: names.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: name,\n            children: name\n          }, name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"New Project\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(User, \"m4jAXoIxEbTiAYdPcsnuZG2B4wU=\");\n\n_c = User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/Users/iLuna/Desktop/CS6301/6301Fall21PTTPrj2/PTTWeb2/pttweb2/src/routes/User.js"],"names":["React","Button","TextField","Grid","OutlinedInput","InputLabel","MenuItem","FormControl","Select","names","User","personName","setPersonName","useState","handleChange","event","target","value","split","paperStyle","padding","height","width","margin","m","map","name"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,IAA5B,QAAwC,mBAAxC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAGA,MAAMC,KAAK,GAAG,CACZ,eADY,EAEZ,WAFY,EAGZ,cAHY,EAIZ,eAJY,EAKZ,gBALY,EAMZ,eANY,EAOZ,eAPY,EAQZ,mBARY,EASZ,kBATY,EAUZ,cAVY,CAAd;AAcA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,KAAK,CAACa,QAAN,CAAe,EAAf,CAApC;;AAEA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,UAAM;AACJC,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF;AADJ,QAEFF,KAFJ;AAGAH,IAAAA,aAAa,EACX;AACA,WAAOK,KAAP,KAAiB,QAAjB,GAA4BA,KAAK,CAACC,KAAN,CAAY,GAAZ,CAA5B,GAA+CD,KAFpC,CAAb;AAID,GARD;;AAUA,QAAME,UAAU,GAAG;AACjBC,IAAAA,OAAO,EAAE,EADQ;AAEjBC,IAAAA,MAAM,EAAE,MAFS;AAGjBC,IAAAA,KAAK,EAAE,GAHU;AAIjBC,IAAAA,MAAM,EAAE;AAJS,GAAnB;AAOA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAE,EAAjB;AAAqB,MAAA,KAAK,EAAEJ,UAA5B;AAAA,8BACA,QAAC,WAAD;AAAa,QAAA,EAAE,EAAE;AAAEK,UAAAA,CAAC,EAAE,CAAL;AAAQF,UAAAA,KAAK,EAAE;AAAf,SAAjB;AAAA,gCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AACE,UAAA,KAAK,EAAEX,UADT;AAEE,UAAA,QAAQ,EAAEG,YAFZ;AAGE,UAAA,KAAK,eAAE,QAAC,aAAD;AAAe,YAAA,KAAK,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,kBAHT;AAAA,oBAKGL,KAAK,CAACgB,GAAN,CAAWC,IAAD,iBACT,QAAC,QAAD;AAEE,YAAA,KAAK,EAAEA,IAFT;AAAA,sBAIGA;AAJH,aACOA,IADP;AAAA;AAAA;AAAA;AAAA,kBADD;AALH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAkBA,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBA,eAmBA;AAAA,gCACE,QAAC,SAAD;AAAW,UAAA,EAAE,EAAC,gBAAd;AAA+B,UAAA,KAAK,EAAC,aAArC;AAAmD,UAAA,OAAO,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;GAjDuBhB,I;;KAAAA,I","sourcesContent":["import * as React from 'react';\nimport { Button, TextField, Grid } from '@material-ui/core';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Carlos Abbott',\n  'Miriam Wagner',\n  'Bradley Wilkerson',\n  'Virginia Andrews',\n  'Kelly Snyder',\n];\n\n\nexport default function User() {\n  const [personName, setPersonName] = React.useState([]);\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setPersonName(\n      // On autofill we get a the stringified value.\n      typeof value === 'string' ? value.split(',') : value,\n    );\n  };\n\n  const paperStyle = {\n    padding: 20,\n    height: \"60vh\",\n    width: 350,\n    margin: \"20px auto\",\n  };\n\n  return (\n    <div>\n      <h1>My page</h1>\n      <Grid elevation={10} style={paperStyle}>\n      <FormControl sx={{ m: 1, width: 200 }}>\n        <InputLabel>Project</InputLabel>\n        <Select\n          value={personName}\n          onChange={handleChange}\n          input={<OutlinedInput label=\"Name\" />}\n        >\n          {names.map((name) => (\n            <MenuItem\n              key={name}\n              value={name}\n            >\n              {name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <Button variant=\"contained\">Delete</Button>      \n      <form>\n        <TextField id=\"outlined-basic\" label=\"New Project\" variant=\"outlined\" />\n        <Button variant=\"contained\">Create</Button>\n      </form>\n      </Grid>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}