{"ast":null,"code":"var _jsxFileName = \"/Users/iLuna/Desktop/CS6301/6301Fall21PTTPrj2/PTTWeb2/pttweb2/src/routes/User.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { TextField } from '@material-ui/core';\nimport { useTheme } from '@mui/material/styles';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nconst names = ['Oliver Hansen', 'Van Henry', 'April Tucker', 'Ralph Hubbard', 'Omar Alexander', 'Carlos Abbott', 'Miriam Wagner', 'Bradley Wilkerson', 'Virginia Andrews', 'Kelly Snyder'];\nexport default function MultipleSelect() {\n  _s();\n\n  const theme = useTheme();\n  const [personName, setPersonName] = React.useState([]);\n\n  const handleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setPersonName( // On autofill we get a the stringified value.\n    typeof value === 'string' ? value.split(',') : value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        m: 1,\n        width: 300\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"demo-multiple-name-label\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"demo-multiple-name-label\",\n        id: \"demo-multiple-name\",\n        multiple: true,\n        value: personName,\n        onChange: handleChange,\n        input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          label: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 18\n        }, this),\n        MenuProps: MenuProps,\n        children: names.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: name,\n          children: name\n        }, name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MultipleSelect, \"sfDDdSu1JVzyreev7Xrw9PfgWAE=\", false, function () {\n  return [useTheme];\n});\n\n_c = MultipleSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultipleSelect\");","map":{"version":3,"sources":["/Users/iLuna/Desktop/CS6301/6301Fall21PTTPrj2/PTTWeb2/pttweb2/src/routes/User.js"],"names":["React","TextField","useTheme","OutlinedInput","InputLabel","MenuItem","FormControl","Select","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","names","MultipleSelect","theme","personName","setPersonName","useState","handleChange","event","target","value","split","m","map","name"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMC,gBAAgB,GAAG,CAAzB;AACA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAEL,WAAW,GAAG,GAAd,GAAoBC,gBAD1B;AAELK,MAAAA,KAAK,EAAE;AAFF;AADG;AADI,CAAlB;AASA,MAAMC,KAAK,GAAG,CACZ,eADY,EAEZ,WAFY,EAGZ,cAHY,EAIZ,eAJY,EAKZ,gBALY,EAMZ,eANY,EAOZ,eAPY,EAQZ,mBARY,EASZ,kBATY,EAUZ,cAVY,CAAd;AAcA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACvC,QAAMC,KAAK,GAAGf,QAAQ,EAAtB;AACA,QAAM,CAACgB,UAAD,EAAaC,aAAb,IAA8BnB,KAAK,CAACoB,QAAN,CAAe,EAAf,CAApC;;AAEA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,UAAM;AACJC,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF;AADJ,QAEFF,KAFJ;AAGAH,IAAAA,aAAa,EACX;AACA,WAAOK,KAAP,KAAiB,QAAjB,GAA4BA,KAAK,CAACC,KAAN,CAAY,GAAZ,CAA5B,GAA+CD,KAFpC,CAAb;AAID,GARD;;AAUA,sBACE;AAAA,2BACE,QAAC,WAAD;AAAa,MAAA,EAAE,EAAE;AAAEE,QAAAA,CAAC,EAAE,CAAL;AAAQZ,QAAAA,KAAK,EAAE;AAAf,OAAjB;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,0BADV;AAEE,QAAA,EAAE,EAAC,oBAFL;AAGE,QAAA,QAAQ,MAHV;AAIE,QAAA,KAAK,EAAEI,UAJT;AAKE,QAAA,QAAQ,EAAEG,YALZ;AAME,QAAA,KAAK,eAAE,QAAC,aAAD;AAAe,UAAA,KAAK,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,gBANT;AAOE,QAAA,SAAS,EAAEX,SAPb;AAAA,kBASGK,KAAK,CAACY,GAAN,CAAWC,IAAD,iBACT,QAAC,QAAD;AAEE,UAAA,KAAK,EAAEA,IAFT;AAAA,oBAIGA;AAJH,WACOA,IADP;AAAA;AAAA;AAAA;AAAA,gBADD;AATH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAvCuBZ,c;UACRd,Q;;;KADQc,c","sourcesContent":["import * as React from 'react';\nimport { TextField } from '@material-ui/core';\nimport { useTheme } from '@mui/material/styles';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Carlos Abbott',\n  'Miriam Wagner',\n  'Bradley Wilkerson',\n  'Virginia Andrews',\n  'Kelly Snyder',\n];\n\n\nexport default function MultipleSelect() {\n  const theme = useTheme();\n  const [personName, setPersonName] = React.useState([]);\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setPersonName(\n      // On autofill we get a the stringified value.\n      typeof value === 'string' ? value.split(',') : value,\n    );\n  };\n\n  return (\n    <div>\n      <FormControl sx={{ m: 1, width: 300 }}>\n        <InputLabel id=\"demo-multiple-name-label\">Name</InputLabel>\n        <Select\n          labelId=\"demo-multiple-name-label\"\n          id=\"demo-multiple-name\"\n          multiple\n          value={personName}\n          onChange={handleChange}\n          input={<OutlinedInput label=\"Name\" />}\n          MenuProps={MenuProps}\n        >\n          {names.map((name) => (\n            <MenuItem\n              key={name}\n              value={name}\n            >\n              {name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}